name: Docker Auto Push

on:
  push:
    branches:
      - main  # or change to your default branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ashreesee/backend
      DOCKER_REGISTRY: docker.io  # change if using GHCR, ECR, etc.

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get short SHA for tag
        id: vars
        run: |
          SHORT_SHA=${GITHUB_SHA::7}
          echo "sha_tag=${SHORT_SHA}" >> "$GITHUB_OUTPUT"

      - name: Check if image exists on registry
        id: check-image
        run: |
          IMAGE=${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_tag }}
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" \
            https://index.docker.io/v1/repositories/${{ env.IMAGE_NAME }}/tags/${{ steps.vars.outputs.sha_tag }})

          if [ "$STATUS" = "200" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Set tag (unique if exists)
        id: set-tag
        run: |
          if [ "${{ steps.check-image.outputs.exists }}" = "true" ]; then
            NEW_TAG="${{ steps.vars.outputs.sha_tag }}-$(date +%s)"
          else
            NEW_TAG="${{ steps.vars.outputs.sha_tag }}"
          fi
          echo "final_tag=${NEW_TAG}" >> $GITHUB_OUTPUT

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ steps.set-tag.outputs.final_tag }} .
          docker push ${{ env.IMAGE_NAME }}:${{ steps.set-tag.outputs.final_tag }}

      - name: Show pushed tag
        run: echo "Pushed ${{ env.IMAGE_NAME }}:${{ steps.set-tag.outputs.final_tag }}"
